// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zone.proto

package zonePB

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Location struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Zone struct {
	Location             *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Radius               float64   `protobuf:"fixed64,2,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Zone) Reset()         { *m = Zone{} }
func (m *Zone) String() string { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()    {}
func (*Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{1}
}

func (m *Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zone.Unmarshal(m, b)
}
func (m *Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zone.Marshal(b, m, deterministic)
}
func (m *Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zone.Merge(m, src)
}
func (m *Zone) XXX_Size() int {
	return xxx_messageInfo_Zone.Size(m)
}
func (m *Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_Zone proto.InternalMessageInfo

func (m *Zone) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Zone) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type Place struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location             *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Place) Reset()         { *m = Place{} }
func (m *Place) String() string { return proto.CompactTextString(m) }
func (*Place) ProtoMessage()    {}
func (*Place) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{2}
}

func (m *Place) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Place.Unmarshal(m, b)
}
func (m *Place) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Place.Marshal(b, m, deterministic)
}
func (m *Place) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Place.Merge(m, src)
}
func (m *Place) XXX_Size() int {
	return xxx_messageInfo_Place.Size(m)
}
func (m *Place) XXX_DiscardUnknown() {
	xxx_messageInfo_Place.DiscardUnknown(m)
}

var xxx_messageInfo_Place proto.InternalMessageInfo

func (m *Place) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Place) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Place) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UserInZone struct {
	Location             *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	User                 *User     `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserInZone) Reset()         { *m = UserInZone{} }
func (m *UserInZone) String() string { return proto.CompactTextString(m) }
func (*UserInZone) ProtoMessage()    {}
func (*UserInZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{4}
}

func (m *UserInZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInZone.Unmarshal(m, b)
}
func (m *UserInZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInZone.Marshal(b, m, deterministic)
}
func (m *UserInZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInZone.Merge(m, src)
}
func (m *UserInZone) XXX_Size() int {
	return xxx_messageInfo_UserInZone.Size(m)
}
func (m *UserInZone) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInZone.DiscardUnknown(m)
}

var xxx_messageInfo_UserInZone proto.InternalMessageInfo

func (m *UserInZone) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *UserInZone) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetPlacesResponse struct {
	Zone                 *Zone    `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	Places               []*Place `protobuf:"bytes,2,rep,name=places,proto3" json:"places,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacesResponse) Reset()         { *m = GetPlacesResponse{} }
func (m *GetPlacesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlacesResponse) ProtoMessage()    {}
func (*GetPlacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71619a26b0a679a, []int{5}
}

func (m *GetPlacesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacesResponse.Unmarshal(m, b)
}
func (m *GetPlacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacesResponse.Marshal(b, m, deterministic)
}
func (m *GetPlacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacesResponse.Merge(m, src)
}
func (m *GetPlacesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlacesResponse.Size(m)
}
func (m *GetPlacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacesResponse proto.InternalMessageInfo

func (m *GetPlacesResponse) GetZone() *Zone {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *GetPlacesResponse) GetPlaces() []*Place {
	if m != nil {
		return m.Places
	}
	return nil
}

func init() {
	proto.RegisterType((*Location)(nil), "zonePB.Location")
	proto.RegisterType((*Zone)(nil), "zonePB.Zone")
	proto.RegisterType((*Place)(nil), "zonePB.Place")
	proto.RegisterType((*User)(nil), "zonePB.User")
	proto.RegisterType((*UserInZone)(nil), "zonePB.UserInZone")
	proto.RegisterType((*GetPlacesResponse)(nil), "zonePB.GetPlacesResponse")
}

func init() { proto.RegisterFile("zone.proto", fileDescriptor_b71619a26b0a679a) }

var fileDescriptor_b71619a26b0a679a = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x49, 0x57, 0xcb, 0x76, 0xab, 0x53, 0xef, 0x83, 0xcc, 0xe1, 0xc3, 0x28, 0x08, 0x45,
	0x64, 0x8c, 0xaa, 0x08, 0x3e, 0xaa, 0x30, 0x84, 0x09, 0x23, 0xe0, 0x83, 0xb2, 0x97, 0xb8, 0x86,
	0x51, 0xa8, 0xc9, 0x68, 0xb2, 0x17, 0xbf, 0xb4, 0x5f, 0x41, 0x72, 0xfb, 0xc7, 0x8d, 0x09, 0x13,
	0xdf, 0x72, 0x7b, 0xcf, 0x39, 0xbf, 0x9c, 0x50, 0x80, 0x4f, 0xad, 0xe4, 0x70, 0x59, 0x68, 0xab,
	0x31, 0x70, 0xe7, 0xe9, 0x7d, 0xf4, 0x08, 0xed, 0x89, 0x9e, 0x0b, 0x9b, 0x69, 0x85, 0x7d, 0x68,
	0xe7, 0xc2, 0x66, 0x76, 0x95, 0xca, 0x1e, 0x1b, 0xb0, 0x98, 0xf1, 0x66, 0xc6, 0x33, 0xe8, 0xe4,
	0x5a, 0x2d, 0xca, 0xa5, 0x47, 0xcb, 0x9f, 0x0f, 0xd1, 0x04, 0xfc, 0x37, 0xad, 0x24, 0x5e, 0x42,
	0x3b, 0xaf, 0xd2, 0x28, 0x21, 0x4c, 0x8e, 0x86, 0x25, 0x68, 0x58, 0x53, 0x78, 0xa3, 0xc0, 0x13,
	0x08, 0x0a, 0x91, 0x66, 0x2b, 0x53, 0x05, 0x56, 0x53, 0xf4, 0x0a, 0x7b, 0xd3, 0x5c, 0xcc, 0x25,
	0x76, 0xc1, 0xcb, 0x52, 0x0a, 0xea, 0x70, 0x2f, 0x4b, 0x11, 0xc1, 0x57, 0xe2, 0xa3, 0xe4, 0x77,
	0x38, 0x9d, 0x37, 0x90, 0xad, 0x5d, 0xc8, 0xe8, 0x02, 0xfc, 0x17, 0x23, 0x8b, 0xbf, 0x24, 0x47,
	0x33, 0x00, 0xa7, 0x7d, 0x52, 0xff, 0xa8, 0x36, 0x00, 0x7f, 0x65, 0x64, 0x41, 0x79, 0x61, 0xb2,
	0x5f, 0x2b, 0x5d, 0x1e, 0xa7, 0x4d, 0x34, 0x83, 0xe3, 0xb1, 0xb4, 0xd4, 0xd3, 0x70, 0x69, 0x96,
	0x5a, 0x19, 0xe9, 0x6c, 0x4e, 0x59, 0x01, 0x1a, 0x9b, 0xbb, 0x00, 0xa7, 0x0d, 0x9e, 0x43, 0xb0,
	0x24, 0x4f, 0xcf, 0x1b, 0xb4, 0xe2, 0x30, 0x39, 0xa8, 0x35, 0x94, 0xc4, 0xab, 0x65, 0xf2, 0xc5,
	0x20, 0x74, 0xae, 0x67, 0xa1, 0xc4, 0x42, 0x16, 0x78, 0x43, 0xb4, 0x07, 0xad, 0xac, 0xc8, 0x54,
	0xa6, 0x16, 0x54, 0x69, 0xab, 0x40, 0x7f, 0x83, 0x18, 0x33, 0xbc, 0x83, 0xc3, 0xe6, 0x92, 0xd5,
	0x3b, 0x6c, 0x48, 0xfa, 0xa7, 0xf5, 0xb4, 0xdd, 0xe5, 0x1a, 0xba, 0x63, 0x69, 0x5d, 0xe3, 0xdf,
	0xad, 0xb8, 0xfe, 0x28, 0xa5, 0x62, 0xc4, 0xf0, 0x96, 0x88, 0x6b, 0x2e, 0xb3, 0xdb, 0x16, 0xb3,
	0x11, 0x7b, 0x0f, 0xe8, 0xbf, 0xbe, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x51, 0xb2, 0x32, 0x51,
	0xe5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZoneManagerClient is the client API for ZoneManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneManagerClient interface {
	GetContainingZone(ctx context.Context, opts ...grpc.CallOption) (ZoneManager_GetContainingZoneClient, error)
	GetPlacesInZone(ctx context.Context, in *Zone, opts ...grpc.CallOption) (*GetPlacesResponse, error)
	GetUsersInZone(ctx context.Context, in *Zone, opts ...grpc.CallOption) (ZoneManager_GetUsersInZoneClient, error)
	GetUsersInZones(ctx context.Context, opts ...grpc.CallOption) (ZoneManager_GetUsersInZonesClient, error)
}

type zoneManagerClient struct {
	cc *grpc.ClientConn
}

func NewZoneManagerClient(cc *grpc.ClientConn) ZoneManagerClient {
	return &zoneManagerClient{cc}
}

func (c *zoneManagerClient) GetContainingZone(ctx context.Context, opts ...grpc.CallOption) (ZoneManager_GetContainingZoneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ZoneManager_serviceDesc.Streams[0], "/zonePB.ZoneManager/GetContainingZone", opts...)
	if err != nil {
		return nil, err
	}
	x := &zoneManagerGetContainingZoneClient{stream}
	return x, nil
}

type ZoneManager_GetContainingZoneClient interface {
	Send(*Location) error
	CloseAndRecv() (*Zone, error)
	grpc.ClientStream
}

type zoneManagerGetContainingZoneClient struct {
	grpc.ClientStream
}

func (x *zoneManagerGetContainingZoneClient) Send(m *Location) error {
	return x.ClientStream.SendMsg(m)
}

func (x *zoneManagerGetContainingZoneClient) CloseAndRecv() (*Zone, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Zone)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zoneManagerClient) GetPlacesInZone(ctx context.Context, in *Zone, opts ...grpc.CallOption) (*GetPlacesResponse, error) {
	out := new(GetPlacesResponse)
	err := c.cc.Invoke(ctx, "/zonePB.ZoneManager/GetPlacesInZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManagerClient) GetUsersInZone(ctx context.Context, in *Zone, opts ...grpc.CallOption) (ZoneManager_GetUsersInZoneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ZoneManager_serviceDesc.Streams[1], "/zonePB.ZoneManager/GetUsersInZone", opts...)
	if err != nil {
		return nil, err
	}
	x := &zoneManagerGetUsersInZoneClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ZoneManager_GetUsersInZoneClient interface {
	Recv() (*UserInZone, error)
	grpc.ClientStream
}

type zoneManagerGetUsersInZoneClient struct {
	grpc.ClientStream
}

func (x *zoneManagerGetUsersInZoneClient) Recv() (*UserInZone, error) {
	m := new(UserInZone)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zoneManagerClient) GetUsersInZones(ctx context.Context, opts ...grpc.CallOption) (ZoneManager_GetUsersInZonesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ZoneManager_serviceDesc.Streams[2], "/zonePB.ZoneManager/GetUsersInZones", opts...)
	if err != nil {
		return nil, err
	}
	x := &zoneManagerGetUsersInZonesClient{stream}
	return x, nil
}

type ZoneManager_GetUsersInZonesClient interface {
	Send(*Zone) error
	Recv() (*UserInZone, error)
	grpc.ClientStream
}

type zoneManagerGetUsersInZonesClient struct {
	grpc.ClientStream
}

func (x *zoneManagerGetUsersInZonesClient) Send(m *Zone) error {
	return x.ClientStream.SendMsg(m)
}

func (x *zoneManagerGetUsersInZonesClient) Recv() (*UserInZone, error) {
	m := new(UserInZone)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ZoneManagerServer is the server API for ZoneManager service.
type ZoneManagerServer interface {
	GetContainingZone(ZoneManager_GetContainingZoneServer) error
	GetPlacesInZone(context.Context, *Zone) (*GetPlacesResponse, error)
	GetUsersInZone(*Zone, ZoneManager_GetUsersInZoneServer) error
	GetUsersInZones(ZoneManager_GetUsersInZonesServer) error
}

func RegisterZoneManagerServer(s *grpc.Server, srv ZoneManagerServer) {
	s.RegisterService(&_ZoneManager_serviceDesc, srv)
}

func _ZoneManager_GetContainingZone_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ZoneManagerServer).GetContainingZone(&zoneManagerGetContainingZoneServer{stream})
}

type ZoneManager_GetContainingZoneServer interface {
	SendAndClose(*Zone) error
	Recv() (*Location, error)
	grpc.ServerStream
}

type zoneManagerGetContainingZoneServer struct {
	grpc.ServerStream
}

func (x *zoneManagerGetContainingZoneServer) SendAndClose(m *Zone) error {
	return x.ServerStream.SendMsg(m)
}

func (x *zoneManagerGetContainingZoneServer) Recv() (*Location, error) {
	m := new(Location)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ZoneManager_GetPlacesInZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Zone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManagerServer).GetPlacesInZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zonePB.ZoneManager/GetPlacesInZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManagerServer).GetPlacesInZone(ctx, req.(*Zone))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManager_GetUsersInZone_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Zone)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZoneManagerServer).GetUsersInZone(m, &zoneManagerGetUsersInZoneServer{stream})
}

type ZoneManager_GetUsersInZoneServer interface {
	Send(*UserInZone) error
	grpc.ServerStream
}

type zoneManagerGetUsersInZoneServer struct {
	grpc.ServerStream
}

func (x *zoneManagerGetUsersInZoneServer) Send(m *UserInZone) error {
	return x.ServerStream.SendMsg(m)
}

func _ZoneManager_GetUsersInZones_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ZoneManagerServer).GetUsersInZones(&zoneManagerGetUsersInZonesServer{stream})
}

type ZoneManager_GetUsersInZonesServer interface {
	Send(*UserInZone) error
	Recv() (*Zone, error)
	grpc.ServerStream
}

type zoneManagerGetUsersInZonesServer struct {
	grpc.ServerStream
}

func (x *zoneManagerGetUsersInZonesServer) Send(m *UserInZone) error {
	return x.ServerStream.SendMsg(m)
}

func (x *zoneManagerGetUsersInZonesServer) Recv() (*Zone, error) {
	m := new(Zone)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ZoneManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zonePB.ZoneManager",
	HandlerType: (*ZoneManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlacesInZone",
			Handler:    _ZoneManager_GetPlacesInZone_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetContainingZone",
			Handler:       _ZoneManager_GetContainingZone_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetUsersInZone",
			Handler:       _ZoneManager_GetUsersInZone_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetUsersInZones",
			Handler:       _ZoneManager_GetUsersInZones_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "zone.proto",
}
